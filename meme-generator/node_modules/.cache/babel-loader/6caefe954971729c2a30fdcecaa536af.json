{"ast":null,"code":"var _jsxFileName = \"F:\\\\Scrimba\\\\Scrimba\\\\meme-generator\\\\src\\\\components\\\\Meme.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Meme() {\n  _s();\n\n  const [meme, setMeme] = React.useState({\n    randomImage: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  const [allMemes, setAllMemes] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => res.json()).then(data => setAllMemes(data.data.memes));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Meme, \"S8z2hY0KMe4s+gA/fBjr8GmXjbM=\");\n\n_c = Meme;\nexport default Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","Meme","meme","setMeme","useState","randomImage","allMemes","setAllMemes","useEffect","fetch","then","res","json","data","memes"],"sources":["F:/Scrimba/Scrimba/meme-generator/src/components/Meme.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction Meme(){\r\n    const [meme, setMeme] = React.useState({\r\n        randomImage: \"http://i.imgflip.com/1bij.jpg\" \r\n    })\r\n\r\n    const [allMemes, setAllMemes] = React.useState([])\r\n\r\n    React.useEffect(() => {\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n            .then(res => res.json())\r\n            .then(data => setAllMemes(data.data.memes))\r\n    }, [])\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <form>\r\n                    <input type='text'/>\r\n                    <input type='text'/>\r\n            </form>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Meme\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,IAAT,GAAe;EAAA;;EACX,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,KAAK,CAACI,QAAN,CAAe;IACnCC,WAAW,EAAE;EADsB,CAAf,CAAxB;EAIA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,KAAK,CAACI,QAAN,CAAe,EAAf,CAAhC;EAEAJ,KAAK,CAACQ,SAAN,CAAgB,MAAM;IAClBC,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAIN,WAAW,CAACM,IAAI,CAACA,IAAL,CAAUC,KAAX,CAF7B;EAGH,CAJD,EAIG,EAJH;EAMA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,uBACI;MAAA,wBACQ;QAAO,IAAI,EAAC;MAAZ;QAAA;QAAA;QAAA;MAAA,QADR,eAEQ;QAAO,IAAI,EAAC;MAAZ;QAAA;QAAA;QAAA;MAAA,QAFR;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH;;GArBQb,I;;KAAAA,I;AAuBT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}